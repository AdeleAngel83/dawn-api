#!/usr/bin/env ruby
require 'bundler/setup'
Bundler.require
require 'commander/import'
require 'excon'

# :name is optional, otherwise uses the basename of this executable
program :name, 'Dawn'
program :version, '0.0.1Î±'
program :description, 'CLI client for Dawn'

#@api_key = "3zPFSV4EoixxGDsHMz8C" # VPS
@api_key = "TKHV5tEJ46tzx9azCzak" # VPS - IceDragon

@headers = {
  'Authorization' => "Token token=\"#{@api_key}\""
}

@api = Excon.new('http://api.anzejagodic.com:5000', headers: @headers)

command 'apps:create' do |c|
  #c.option '--interval SECONDS', Integer, 'Interval in seconds'
  #c.option '--timeout SECONDS', Integer, 'Timeout in seconds'
  c.action do |args, options|
    #options.default(interval: 2, timeout: 60)

    resp = @api.request(
      method: :post,
      path: '/apps',
      query: { name: args.first }
    )
    #`git remote add dawn git@anzejagodic.com:#{resp[:name]}`
    hsh = JSON.load(resp.body)
    puts "Created app #{hsh["app"]["name"]}"
  end
end

command 'apps:list' do |c|
  c.action do |args, options|
    resp = @api.request(
      method: :get,
      path: '/apps'
    )
    hsh = JSON.load(resp.body)
    hsh.each do |app_hash|
      puts app_hash
    end
  end
end

command 'apps:get' do |c|
  c.action do |args, options|
    resp = @api.request(
      method: :get,
      path: "/apps/#{args.first}"
    )
    hsh = JSON.load(resp.body)
    puts hsh
  end
end

command 'apps:update' do |c|
  c.action do |args, options|
    resp = @api.request(
      method: :puts,
      path: "/apps/#{args.first}"
    )
    puts resp
  end
end

command 'apps:delete' do |c|
  c.action do |args, options|
    resp = @api.request(
      method: :delete,
      path: "/apps/#{args.first}"
    )
    puts resp
  end
end

command 'keys:list' do |c|
  c.action do |args, options|
    resp = @api.request(
      method: :get,
      path: '/account/keys'
    )
    puts resp.body
  end
end

command 'keys:get' do |c|
  c.action do |args, options|
    resp = @api.request(
      method: :get,
      path: "/account/keys/#{args.first}"
    )
    puts resp.body
  end
end

command 'keys:add' do |c|
  c.action do |args, options|
    file = "#{Dir.home}/.ssh/id_rsa.pub"
    pubkey = File.read(file)#.delete("\n")
    fingerprint = `ssh-keygen -lf #{file}`#.delete("\n")

    resp = @api.request(
      method: :post,
      path: '/account/keys',
      query: { key: pubkey, fingerprint: fingerprint }
    )
    puts resp.body
  end
end

# dawn keys
  # - :add / :push
# dawn run <command>
# dawn scale
# dawn restart

# dawn logs
# dawn logs --tail

# gem push dawn master

=begin
$ heroku ps
=== web: `bundle exec unicorn -p $PORT -c ./config/unicorn.rb`
web.1: up for 8h
web.2: up for 3m

=== worker: `bundle exec stalk worker.rb`
worker.1: up for 1m
=end